<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>自签证书与docker环境与自建仓库(k8s学习三)</title>
      <link href="2021/02/21/zi-qian-zheng-shu-yu-docker-huan-jing-yu-zi-jian-cang-ku/"/>
      <url>2021/02/21/zi-qian-zheng-shu-yu-docker-huan-jing-yu-zi-jian-cang-ku/</url>
      
        <content type="html"><![CDATA[<h1 id="自签证书"><a href="#自签证书" class="headerlink" title="自签证书"></a>自签证书</h1><h2 id="下载相关软件包"><a href="#下载相关软件包" class="headerlink" title="下载相关软件包"></a>下载相关软件包</h2><pre class="line-numbers language-none"><code class="language-none">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/local/bin/cfsslwget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/local/bin/cfssl-jsonwget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -O /usr/local/bin/cfssl-certinfo# 可执行chmod u+x /usr/local/bin/cfssl*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="进入工作目录"><a href="#进入工作目录" class="headerlink" title="进入工作目录"></a>进入工作目录</h2><pre class="line-numbers language-none"><code class="language-none">cd /opt &amp;&amp; mkdir certs &amp;&amp; cd certs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="编写ca-csr-json"><a href="#编写ca-csr-json" class="headerlink" title="编写ca-csr.json"></a>编写ca-csr.json</h2><pre class="line-numbers language-none"><code class="language-none">{    "CN": "lintyone",    "hosts": [    ],    "key": {        "algo": "rsa",        "size": 2048    },    "names": [        {            "C": "CN",            "ST": "shenzhen",            "L": "shenzhen",            "O": "gy",            "OU": "ops"        }    ],    "ca": {        "expiry": "175200h"    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="签证书"><a href="#签证书" class="headerlink" title="签证书"></a>签证书</h2><pre class="line-numbers language-none"><code class="language-none">cfssl gencert -initca ca-csr.json | cfssl-json -bare ca<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成以下文件</p><pre class="line-numbers language-none"><code class="language-none">[root@dns0-50 certs]# lltotal 16-rw-r--r--. 1 root root  997 Feb 21 05:53 ca.csr-rw-r--r--. 1 root root  330 Feb 21 05:47 ca-csr.json-rw-------. 1 root root 1679 Feb 21 05:53 ca-key.pem-rw-r--r--. 1 root root 1346 Feb 21 05:53 ca.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Docker环境"><a href="#Docker环境" class="headerlink" title="Docker环境"></a>Docker环境</h1><p>本次在  dns0-50 sh0-20 sh0-21 三台机子安装Docker</p><p>配置 base 源, 不然找不到很多包</p><pre class="line-numbers language-none"><code class="language-none">vi /etc/yum.repos.d/CentOS-Base.repo# CentOS-Base.repo## The mirror system uses the connecting IP address of the client and the# update status of each mirror to pick mirrors that are updated to and# geographically close to the client.  You should use this for CentOS updates# unless you are manually picking other mirrors.## If the mirrorlist= does not work for you, as a fall back you can try the# remarked out baseurl= line instead.##[BaseOS]name=CentOS-$releasever - Basebaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/BaseOS/$basearch/os/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=BaseOS&amp;infra=$infraenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial[AppStream]name=CentOS-$releasever - AppStreambaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/AppStream/$basearch/os/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=AppStream&amp;infra=$infraenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial[PowerTools]name=CentOS-$releasever - PowerToolsbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/PowerTools/$basearch/os/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=PowerTools&amp;infra=$infraenabled=0gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial#additional packages that may be useful[extras]name=CentOS-$releasever - Extrasbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/extras/$basearch/os/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extrasenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial#additional packages that extend functionality of existing packages[centosplus]name=CentOS-$releasever - Plusbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/centosplus/$basearch/os/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplusgpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="装docker"><a href="#装docker" class="headerlink" title="装docker"></a>装docker</h2><pre class="line-numbers language-none"><code class="language-none">yum -y install http://mirror.centos.org/centos/8/AppStream/x86_64/os/Packages/container-selinux-2.144.0-1.module_el8.3.0+475+c50ce30b.noarch.rpmyum erase podman buildahcurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Docker配置"><a href="#Docker配置" class="headerlink" title="Docker配置"></a>Docker配置</h2><p>创建文件夹</p><pre class="line-numbers language-none"><code class="language-none">mkdir -p /data/docker /etc/docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h4><p><code>vim /etc/docker/daemon.json</code></p><p>注意这里的bip 是根据机器的ip的, dns0-50  ip 是50 , 所以bip为172.7.50.1/24 这样方便识别</p><pre class="line-numbers language-none"><code class="language-none">{  "graph": "/data/docker",  "storage-driver": "overlay2",  "insecure-registries": ["registry.access.redhat.com","quay.io","harbor.gy.com"],  "registry-mirrors": [    "https://registry.docker-cn.com",    "http://hub-mirror.c.163.com",    "https://docker.mirrors.ustc.edu.cn"  ],  "bip": "172.7.50.1/24",  "exec-opts": ["native.cgroupdriver=systemd"],  "live-restore": true}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后启动<br><code>systemctl start docker</code></p><p>可以通过 <code>docker info</code> 查看docker 当前状态</p><h1 id="自建Docker仓库"><a href="#自建Docker仓库" class="headerlink" title="自建Docker仓库"></a>自建Docker仓库</h1><h2 id="下载harbor"><a href="#下载harbor" class="headerlink" title="下载harbor"></a>下载harbor</h2><pre class="line-numbers language-none"><code class="language-none">mkdir /opt/src &amp;&amp; cd /opt/src/mkdir -p /data/harbor/logscurl -L https://get.daocloud.io/docker/compose/releases/download/1.28.4/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-composechmod +x /usr/local/bin/docker-composewget https://github.com/goharbor/harbor/releases/download/v2.0.6/harbor-online-installer-v2.0.6.tgzcp harbor.yml.tmpl harbor.ymlvim harbor.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用online版本,会需要拉取很多docker image ,用outline版本, 会把这些image先下载, 看个人喜好</p></blockquote><h4 id="修改内容"><a href="#修改内容" class="headerlink" title="修改内容"></a>修改内容</h4><pre class="line-numbers language-none"><code class="language-none">hostname: harbor.gy.comhttp:  port: 180data_volume: /data/harborlocation: /data/harbor/logs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="执行安装"><a href="#执行安装" class="headerlink" title="执行安装"></a>执行安装</h4><pre class="line-numbers language-none"><code class="language-none">./install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如果出现ssl签名的错误,可以先注释掉https部分,或者配上证书</p></blockquote><h4 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h4><p>到这一步已经可以通过180端口访问了</p><p><img src="https://ae01.alicdn.com/kf/U89ff041ddc7c4a0381d824c5725cbfa2F.jpg"></p><h4 id="使用nginx-转发"><a href="#使用nginx-转发" class="headerlink" title="使用nginx 转发"></a>使用nginx 转发</h4><p>使用<code>yum install -y nginx</code>安装nginx</p><p>使用 <code>vim /etc/nginx/conf.d/harbor.gy.com.conf</code> 编辑文件输入以下内容</p><pre class="line-numbers language-none"><code class="language-none">server {    listen       80;    server_name  harbor.gy.com;    # 避免出现上传失败的情况    client_max_body_size 1000m;    location / {        proxy_pass http://127.0.0.1:180;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动nginx <code>systemctl start nginx</code> 或者如果启动过了就重载配置 <code>nginx -s reload</code></p><blockquote><p>这里要在DNS记录上添加 harbor.gy.com 指向192.168.0.50, 配置不贴, 动0.0001个脑细胞既可得</p></blockquote><h2 id="测试一下Harbor"><a href="#测试一下Harbor" class="headerlink" title="测试一下Harbor"></a>测试一下Harbor</h2><p><code>docker pull nginx:1.19.7</code> 下载一个nginx包,用来测试自建仓库</p><p>使用 <code>docker login harbor.gy.com</code> 登录</p><pre class="line-numbers language-none"><code class="language-none">docker tag nginx:1.7.9  harbor.gy.com/public/nginx:1.7.9docker push harbor.gy.com/public/nginx:1.7.9docker logout<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以看到, 已经成功把镜像推送到harbor里了<br><img src="https://ae01.alicdn.com/kf/U3c0a961542414810842b2d0f5251ebdeK.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自建DNS服务(k8s学习二)</title>
      <link href="2021/02/21/zi-jian-dns-fu-wu/"/>
      <url>2021/02/21/zi-jian-dns-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="自建DNS服务-k8s学习二"><a href="#自建DNS服务-k8s学习二" class="headerlink" title="自建DNS服务(k8s学习二)"></a>自建DNS服务(k8s学习二)</h1><p>记录本次学习k8s搭建集群的经过</p><h2 id="安装Bind"><a href="#安装Bind" class="headerlink" title="安装Bind"></a>安装Bind</h2><p>dns0-50 被我预留为做DNS服务的机器, 所以只在这台安装bind</p><blockquote><p>Bind(Berkeley Internet Name Domain Service)，它是一款实现DNS服务器的开放源码软件,够提供双向解析，转发，子域授权，view等功能,是世界上使用最为广泛的DNS服务器软件，目前Internet上半数以上的DNS服务器有都是用Bind来架设的。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">yum install -y bind<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看版本: </p><pre class="line-numbers language-none"><code class="language-none">[root@dns0-50 ~]# named -vBIND 9.11.20-RedHat-9.11.20-5.el8 (Extended Support Version) &lt;id:f3d1d66&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h2><pre class="line-numbers language-none"><code class="language-none">yum install -y wgetyum install -y net-toolsyum install -y telnetyum install -y treeyum install -y nmapyum install -y sysstatyum install -y lrzszyum install -y dos2unixyum install -y bind-utilsyum install -y vimyum install -y less<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置Bind"><a href="#配置Bind" class="headerlink" title="配置Bind"></a>配置Bind</h2><pre class="line-numbers language-none"><code class="language-none">[root@dns0-50 ~]# vim /etc/named.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改配置:</p><pre class="line-numbers language-none"><code class="language-none">options {listen-on port 53 { 192.168.0.50; };                          #修改directory "/var/named";dump-file "/var/named/data/cache_dump.db";statistics-file "/var/named/data/named_stats.txt";memstatistics-file "/var/named/data/named_mem_stats.txt";secroots-file"/var/named/data/named.secroots";recursing-file"/var/named/data/named.recursing";allow-query     { any; };                                     #修改forwarders{ 192.168.0.1; };                                 #新增/* - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion. - If you are building a RECURSIVE (caching) DNS server, you need to enable   recursion. - If your recursive DNS server has a public IP address, you MUST enable access   control to limit queries to your legitimate users. Failing to do so will   cause your server to become part of large scale DNS amplification   attacks. Implementing BCP38 within your network would greatly   reduce such attack surface*/recursion yes;dnssec-enable no;                                             #修改dnssec-validation no;                                         #修改managed-keys-directory "/var/named/dynamic";pid-file "/run/named/named.pid";session-keyfile "/run/named/session.key";/* https://fedoraproject.org/wiki/Changes/CryptoPolicy */include "/etc/crypto-policies/back-ends/bind.config";};logging {        channel default_debug {                file "data/named.run";                severity dynamic;        };};zone "." IN {type hint;file "named.ca";};include "/etc/named.rfc1912.zones";include "/etc/named.root.key";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>检查配置是否正确, 无报错即为正确:</p><pre class="line-numbers language-none"><code class="language-none">named-checkconf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>增加DNS配置</p><pre class="line-numbers language-none"><code class="language-none">vim /etc/named.rfc1912.zones# 添加以下内容zone "host.com" IN {        type master;        file "host.com.zone";        allow-update { 192.168.0.50; };};zone "gy.com" IN {        type master;        file "gy.com.zone";        allow-update { 192.168.0.50; };};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改 <code>/var/named/host.com.zone</code></p><pre class="line-numbers language-none"><code class="language-none">$ORIGIN host.com.$TTL 600  ; 10 minutes # 过期时间十分钟 这里的分号是注释@       IN SOA  dns.host.com. dnsadmin.host.com. (        2021022101 ; serial        10800      ; refresh (3 hours) # soa参数        900        ; retry (15 minutes)        604800     ; expire (1 week)        86400      ; minimum (1 day)        )      NS   dns.host.com.$TTL 60 ; 1 minutedns             A       192.168.0.50sh0-20          A       192.168.0.20sh0-21          A       192.168.0.21sh0-30          A       192.168.0.30sh0-31          A       192.168.0.31<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改 <code>/var/named/gy.com.zone</code></p><pre class="line-numbers language-none"><code class="language-none">$ORIGIN gy.com.$TTL 600  ; 10 minutes@       IN SOA  dns.gy.com. dnsadmin.gy.com. (        2021022101 ; serial        10800      ; refresh (3 hours)        900        ; retry (15 minutes)        604800     ; expire (1 week)        86400      ; minimum (1 day)        )        NS   dns.gy.com.$TTL 60 ; 1 minutedns                A    192.168.0.50<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>检查配置 <code>named-checkconf</code></p><p>启动bind服务  <code>systemctl start named</code></p><p>查看端口  <code>netstat -luntp | grep 53</code></p><pre class="line-numbers language-none"><code class="language-none">tcp        0      0 192.168.0.50:53         0.0.0.0:*               LISTEN      27121/namedtcp        0      0 127.0.0.1:953           0.0.0.0:*               LISTEN      27121/namedtcp6       0      0 :::53                   :::*                    LISTEN      27121/namedtcp6       0      0 ::1:953                 :::*                    LISTEN      27121/namedudp        0      0 192.168.0.50:53         0.0.0.0:*                           27121/namedudp6       0      0 :::53                   :::*                                27121/named<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改其他机子的dns指向ip"><a href="#修改其他机子的dns指向ip" class="headerlink" title="修改其他机子的dns指向ip"></a>修改其他机子的dns指向ip</h2><pre class="line-numbers language-none"><code class="language-none">vim /etc/sysconfig/network-scripts/ifcfg-ens33IPADDR=192.168.0.20NETMASK=255.255.255.0GATEWAY=192.168.0.1DNS1=192.168.0.50<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后测试ping</p><pre class="line-numbers language-none"><code class="language-none">[root@sh0-20 ~]# ping sh0-31PING sh0-31.host.com (192.168.0.31) 56(84) bytes of data.64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=1 ttl=64 time=0.970 ms64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=2 ttl=64 time=0.646 ms64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=3 ttl=64 time=0.715 ms64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=4 ttl=64 time=0.752 ms64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=5 ttl=64 time=0.814 ms64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=6 ttl=64 time=0.555 ms64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=7 ttl=64 time=0.687 ms64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=8 ttl=64 time=0.713 ms64 bytes from 192.168.0.31 (192.168.0.31): icmp_seq=9 ttl=64 time=0.666 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果遇到短域名不可用</p><pre class="line-numbers language-none"><code class="language-none">vim /etc/resolv.conf最前面添加一行 search host.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机搭建(k8s学习一)</title>
      <link href="2021/02/21/xu-ni-ji-da-jian/"/>
      <url>2021/02/21/xu-ni-ji-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机搭建-k8s学习一"><a href="#虚拟机搭建-k8s学习一" class="headerlink" title="虚拟机搭建(k8s学习一)"></a>虚拟机搭建(k8s学习一)</h1><p>记录本次学习k8s搭建集群的经过</p><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><blockquote><p>家里闲置的RedmiBook终于派上用场了</p></blockquote><p>首先创建一个Base虚拟机, 用于克隆出其他机子, 系统采用的是CentOS 8</p><pre class="line-numbers language-none"><code class="language-none">Linux sh0-20.host.com 4.18.0-80.el8.x86_64 #1 SMP Tue Jun 4 09:19:46 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后克隆出5个虚拟机</p><p>网络我是这么规划的, 首先虚拟机全部采用桥接模式, 方便局域网互联, 并且给每个机子修改hostname和静态IP</p><p>网关: 192.168.0.1</p><pre class="line-numbers language-none"><code class="language-none">sh0-20    192.168.0.20sh0-21    192.168.0.21sh0-30    192.168.0.30sh0-31    192.168.0.31dns0-50   192.168.0.50  专门用来做DNS服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中一台的示例: </p><pre class="line-numbers language-none"><code class="language-none">[root@sh0-20 ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33TYPE=EthernetPROXY_METHOD=noneBROWSER_ONLY=noBOOTPROTO=static   #修改DEFROUTE=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=ens33UUID=44d3e35b-11aa-42b9-9138-0dbffae6c1e1  #克隆出来的每一台要修改UUIDDEVICE=ens33ONBOOT=yes  #修改IPADDR=192.168.0.20NETMASK=255.255.255.0GATEWAY=192.168.0.1DNS1=192.168.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存配置后不会马上生效, CentOS 8 执行以下命令</p><pre class="line-numbers language-none"><code class="language-none">nmcli c reloadnmcli c up ens33    # 网卡名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="添加EPEL源"><a href="#添加EPEL源" class="headerlink" title="添加EPEL源"></a>添加EPEL源</h2><p>EPEL是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。装上了 EPEL之后，就相当于添加了一个第三方源</p><pre class="line-numbers language-none"><code class="language-none">yum install -y epel-release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><pre class="line-numbers language-none"><code class="language-none">systemctl stop firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆水行舟,不进则退</title>
      <link href="2020/12/07/ni-shui-xing-zhou-bu-jin-ze-tui/"/>
      <url>2020/12/07/ni-shui-xing-zhou-bu-jin-ze-tui/</url>
      
        <content type="html"><![CDATA[<h4 id="为什么要重新开始写博客"><a href="#为什么要重新开始写博客" class="headerlink" title="为什么要重新开始写博客"></a>为什么要重新开始写博客</h4><p>主要是觉得,已经很久没有深入学习一门技术了,总是停留在业务代码上,反观去年,过年期间还撸了MGR,所以感觉2020年还是有点退步的<br>想从今天起, 生活节奏能有点变化, 加油.</p><h4 id="要怎么样有所改变"><a href="#要怎么样有所改变" class="headerlink" title="要怎么样有所改变"></a>要怎么样有所改变</h4><p>我觉得主要做到以下几点</p><ol><li>想做什么就去做, 精神愉悦也是效率的前置条件</li><li>专注, 安排好做一件事就好好做掉,不要中途停下,就算停下也要马上进入状态</li><li>每天要做做题, 看看书</li></ol><h4 id="关于年底和明年的构想"><a href="#关于年底和明年的构想" class="headerlink" title="关于年底和明年的构想"></a>关于年底和明年的构想</h4><ol><li>完成手上公司的项目</li><li>小链项目开始</li><li>每天多花点时间看看新的技术</li><li>筹办创业的事</li></ol><iframe src="//player.bilibili.com/player.html?aid=1031924&amp;bvid=BV1Bs411Z7AV&amp;cid=1494043&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="600px"> </iframe>]]></content>
      
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 心情 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
